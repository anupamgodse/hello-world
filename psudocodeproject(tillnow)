typedef struct dirent dirent;
typedef struct node {
	dirent *cdir;
	struct node *nnext, *nprev;
}node;
typedef struct mydir {
	node *nhead, *ntail;
	struct mydir *mnext, *mprev;
}mydir;
typedef myplan {
	mydir *head, *tail;
}myplan;
typedef struct stat stat;
stat fstat;
void sortdir(mydir *, name with path);
int main() {
	create myplan(initialize head and tail to NULL);
	open the specified directory;
	//iff exists open the directory;
	create mydir;
	//at this state we dont know whether we have any files or directories present in this directory. Hence nhead = nprev = mnext = NULL(mprev = NULL)
	make head(and tail) point to this directory;(myplan)
	while(no file or directory(dirent) is present) {
		identify dirent as file or directory;
		iff a dirent is a file(implies the file is present in given directory) {
			append this file to mydir;
		}
		elseif(dirent = directory) {
				call sortdir(*a, directory name(withpath));  //this function will be recursive and take all the files in data structure under specific directory.
		}
	}
	now we have all directorires under myplan and all the files under specific mydir;
}	
void sortdir(mydir *a, name with path) {
	go to specific path;
	open the req directory;
	create mydir;
	append this directory to my plan;
	while(no file or directory(dirent) is present) {
		identify dirent as file or directory;
		iff a dirent is a file(implies the file is present in given directory) {
			create a node append it to current mydir; 
		}
		elseif(dirent = directory) {
				call sortdir(*a, directory name(withpath));  //this function will be recursive and take all the files in data structure under specific directory.
		}
	}
}
//Now i will be having all the files. Now i will search the specified file by its name in myplan. once i got the first file i will compare it using filename, filesize, md5 signature and byte by byte comparison. When i will get a duplicate file I will take its pointer in a new file pointer array. Like this I will have all the duplicate files and then i can do all desired oprations in them. 
	
